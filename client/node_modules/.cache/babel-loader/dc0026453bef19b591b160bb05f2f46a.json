{"ast":null,"code":"var _jsxFileName = \"/Users/anthonydike/code/like-google-docs/client/src/Editor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useCallback, useState } from 'react';\nimport Quill from 'quill';\nimport \"quill/dist/quill.snow.css\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Editor() {\n  _s();\n\n  const [quill, setQuill] = useState();\n  const [socket, setSocket] = useState();\n  const editorRef = useCallback(editorWrapper => {\n    if (editorWrapper === null) return;\n    const editorDiv = document.createElement('div');\n    editorWrapper.innerHTML = \"\";\n    editorWrapper.append(editorDiv);\n    const quillInstance = new Quill(editorDiv, {\n      theme: 'snow'\n    });\n    setQuill(quillInstance); // socket.on('editedContent', (editedContent) => {\n    //   quill.setContents(editedContent)\n    // })\n  }, []); // TODO: Fix infinite loop\n  // SETTING UP THE SOCKET CONNECTION\n\n  useEffect(() => {\n    const socketInstance = io(\"http://localhost:3001\");\n    setSocket(socketInstance); // return (() => {\n    //   socket.disconnect()\n    // })\n  }, []); // SEND CHANGES\n\n  useEffect(() => {\n    if (!socket || !quill) return;\n\n    const handleChange = (delta, oldDelta, source) => {\n      if (source != 'user') return;\n      socket.emit('send-changes', delta);\n    };\n\n    quill.on('text-change', handleChange);\n    return () => {\n      quill.off('text-change', handleChange);\n    };\n  }, [quill, socket]); // RECIEVE CHANGES\n\n  useEffect(() => {\n    if (!socket || !quill) return;\n\n    const handleChange = delta => {\n      socket.emit('send-changes', delta);\n    };\n\n    return () => {\n      second;\n    };\n  }, [third]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: editorRef,\n    id: \"container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Editor, \"2GXNR4ar17lkJHljny/4IkSudl4=\");\n\n_c = Editor;\nexport default Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["/Users/anthonydike/code/like-google-docs/client/src/Editor.js"],"names":["React","useEffect","useRef","useCallback","useState","Quill","io","Editor","quill","setQuill","socket","setSocket","editorRef","editorWrapper","editorDiv","document","createElement","innerHTML","append","quillInstance","theme","socketInstance","handleChange","delta","oldDelta","source","emit","on","off","second","third"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,WAAlC,EAA+CC,QAA/C,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,2BAAP;AACA,SAAQC,EAAR,QAAiB,kBAAjB;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,EAAlC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,EAApC;AAEA,QAAMQ,SAAS,GAAGT,WAAW,CAAEU,aAAD,IAAmB;AAE/C,QAAIA,aAAa,KAAK,IAAtB,EAA4B;AAE5B,UAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAlB;AAEAH,IAAAA,aAAa,CAACI,SAAd,GAA0B,EAA1B;AACAJ,IAAAA,aAAa,CAACK,MAAd,CAAqBJ,SAArB;AACA,UAAMK,aAAa,GAAG,IAAId,KAAJ,CAAUS,SAAV,EAAqB;AAACM,MAAAA,KAAK,EAAE;AAAR,KAArB,CAAtB;AACAX,IAAAA,QAAQ,CAACU,aAAD,CAAR,CAT+C,CAa/C;AACA;AACA;AAGD,GAlB4B,EAkB1B,EAlB0B,CAA7B,CAJgB,CAwBhB;AAEA;;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoB,cAAc,GAAGf,EAAE,CAAC,uBAAD,CAAzB;AAEAK,IAAAA,SAAS,CAACU,cAAD,CAAT,CAHc,CAKd;AACA;AACA;AACD,GARQ,EAQP,EARO,CAAT,CA3BgB,CAqChB;;AACApB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACS,MAAD,IAAW,CAACF,KAAhB,EAAuB;;AAEvB,UAAMc,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,MAAlB,KAA6B;AAChD,UAAIA,MAAM,IAAI,MAAd,EAAsB;AACtBf,MAAAA,MAAM,CAACgB,IAAP,CAAY,cAAZ,EAA4BH,KAA5B;AACD,KAHD;;AAKAf,IAAAA,KAAK,CAACmB,EAAN,CAAS,aAAT,EAAwBL,YAAxB;AAEA,WAAO,MAAM;AACXd,MAAAA,KAAK,CAACoB,GAAN,CAAU,aAAV,EAAyBN,YAAzB;AACD,KAFD;AAGD,GAbQ,EAaN,CAACd,KAAD,EAAQE,MAAR,CAbM,CAAT,CAtCgB,CAqDhB;;AACAT,EAAAA,SAAS,CAAC,MAAM;AACb,QAAI,CAACS,MAAD,IAAW,CAACF,KAAhB,EAAuB;;AAEvB,UAAMc,YAAY,GAAIC,KAAD,IAAW;AAC/Bb,MAAAA,MAAM,CAACgB,IAAP,CAAY,cAAZ,EAA4BH,KAA5B;AACD,KAFA;;AAID,WAAO,MAAM;AACXM,MAAAA,MAAM;AACP,KAFD;AAGD,GAVQ,EAUN,CAACC,KAAD,CAVM,CAAT;AAaA,sBACE;AAAK,IAAA,GAAG,EAAElB,SAAV;AAAqB,IAAA,EAAE,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;GAtEQL,M;;KAAAA,M;AAwET,eAAeA,MAAf","sourcesContent":["import React, {useEffect, useRef, useCallback, useState} from 'react'\nimport Quill from 'quill';\nimport \"quill/dist/quill.snow.css\"\nimport {io} from \"socket.io-client\"\n\nfunction Editor() {\n  const [quill, setQuill] = useState()\n  const [socket, setSocket] = useState()\n\n  const editorRef = useCallback((editorWrapper) => {\n    \n    if (editorWrapper === null) return\n    \n    const editorDiv = document.createElement('div')\n\n    editorWrapper.innerHTML = \"\"\n    editorWrapper.append(editorDiv);\n    const quillInstance = new Quill(editorDiv, {theme: 'snow'})\n    setQuill(quillInstance)\n\n    \n    \n    // socket.on('editedContent', (editedContent) => {\n    //   quill.setContents(editedContent)\n    // })\n\n    \n  }, []);\n\n  // TODO: Fix infinite loop\n\n  // SETTING UP THE SOCKET CONNECTION\n  useEffect(() => {\n    const socketInstance = io(\"http://localhost:3001\")\n\n    setSocket(socketInstance)\n    \n    // return (() => {\n    //   socket.disconnect()\n    // })\n  },[])\n\n  // SEND CHANGES\n  useEffect(() => {\n    if (!socket || !quill) return\n\n    const handleChange = (delta, oldDelta, source) => {\n      if (source != 'user') return\n      socket.emit('send-changes', delta)\n    }\n    \n    quill.on('text-change', handleChange)\n\n    return () => {\n      quill.off('text-change', handleChange)\n    }\n  }, [quill, socket])\n\n  // RECIEVE CHANGES\n  useEffect(() => {\n     if (!socket || !quill) return\n\n     const handleChange = (delta) => {\n      socket.emit('send-changes', delta)\n    }\n  \n    return () => {\n      second\n    }\n  }, [third])\n  \n\n  return (\n    <div ref={editorRef} id='container'></div>\n  )\n}\n\nexport default Editor"]},"metadata":{},"sourceType":"module"}